# -*- coding: utf-8 -*-
"""project 10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vtY9jhcKC_z3oPgbTq63Wj-RghjJb9V3
"""

import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

filepath="hospital_patient_records.csv"
df=pd.read_csv(filepath)
df.head()

#date time
df['DischargeDate']=pd.to_datetime(df['DischargeDate'] , errors='coerce')
df['DischargeDate'].dtype

#date time
df['AdmissionDate']=pd.to_datetime(df['AdmissionDate'] , errors='coerce')
df['AdmissionDate'].dtype

df['AdmissionDate'].fillna(0 , inplace=True)

df['AdmissionDate']

#converte NAT to 0
df['DischargeDate'].fillna(0 , inplace=True)
df['DischargeDate']

df['ADate'].fillna(0 , inplace=True)

#to lowercase
df['Status']=df['Status'].str.lower()
df['Status'].head()
df['Status'].dtype

#convert age to integer
df['Age']=df['Age'].replace('forty-five' , 45)

df['Age']

#convert age to numric
df['Age']=df['Age'].replace('NAN' , 0)
df['Age'].fillna(0 , inplace=True)
df['Age']=pd.to_numeric(df['Age'] , errors = 'coerce')
df['Age'].dtypes
df['Age']

#missing value for doctor coulumn
df['Doctor'].fillna('Unknown' , inplace=True)
df['Doctor']

#missing value for name coulumn
df['Name'].fillna('Unknown' , inplace=True)
df['Name']

#ststus to lowercase
df['Status']=df['Status'].str.lower()
df['Status']

#remove dublicate
df.drop_duplicates(inplace=True)

#data after cleaning
print(f"Rows after cleaning: {df.shape[0]}")

#checking missing value

missing_values = df.isnull().sum()
print("Missing values after cleaning:")
print(missing_values)

# check coulum datatype
df['Age'] = df['Age'].astype(int)
df.dtypes

print("Cleaned dataset:")
print(df)

# Count the number of patients per department
patient_counts = df['Department'].value_counts()
print("Number of patients per department:")
print(patient_counts)

# Create a bar chart
plt.figure(figsize=(8, 5))  # Set the figure size
patient_counts.plot(kind='bar', color='skyblue')

# Add labels and title
plt.xlabel('Department')
plt.ylabel('Number of Patients')
plt.title('Number of Patients per Department')

# Count the number of patients per status
status_counts = df['Status'].value_counts()
print("Number of patients per status:")
print(status_counts)

# Create a pie chart
plt.figure(figsize=(6, 6))
plt.pie(status_counts, labels=status_counts.index, autopct='%1.1f%%', startangle=90, colors=['lightblue', 'lightgreen', 'salmon'])
# Add title
plt.title('Distribution of Patient Statuses')

# Extract year and month from the admission date
df['AdmissionDate'] = df['AdmissionDate'].dt.to_period('M')

# Count the number of admissions per month
monthly_admissions = df['AdmissionDate'].value_counts().sort_index()

# Convert Period index to string for plotting
monthly_admissions.index = monthly_admissions.index.astype(str)

